@model LoginViewModel;

@{
    var errorModel = ViewBag.ErrorModel as IdentityServer_FrontEnd.ViewModels.ErrorViewModel;//так дуже погано робити, користуватись динаміком- погано, треба знайти інше рішення
}

<head>
    <link href= @Url.Content("~/styles/app.css") rel="stylesheet" type="text/css" /><!-- Це те звідки буде братись стилістика цієї сторінки-->
</head>
<form asp-controller="Auth" asp-action="Login" metod= "post"><!--Це яктй метод буде відповідати за роботу з сторінкою-->
    <input type="hidden" asp-for="ReturnUrl" /><!-- тип який буде прихований і міститиме посилання на повернення-->
    <div class="heared">Login</div><!--Це заголовок для Авторизації -->
    <div class="block"><!-- Це заголовок що все що в ньому це буде окремий блок -->
        @if (errorModel != null && errorModel.UserNameErrors != null)
        {
            foreach (var item in errorModel.UserNameErrors)
            {
                <div>
                    <label>
                        @item.ErrorMessage
                    </label>
                </div>
            }
        }
        <label>Username</label><!--Напис Username -->
        <input asp-for="UserName" class="input" /><!--Поле для введення даних а саме логіну -->
    </div>
    <div class="block">
        @if (errorModel != null && errorModel.PasswordErrors != null)
        {
            foreach (var item in errorModel.PasswordErrors)
            {
                        <div>
                          <label>
                                @item.ErrorMessage
                          </label>
                        </div>
            }
        }
        <label>Password</label>
        <input asp-for="Password" class="input" />
    </div>
    <div class="block">
        <button type="submit" class="button"><!--Кнопка підтвердження -->
            Sign In
        </button>
    </div>
    <a asp-controller="Auth" asp-action="Register" asp-route-returnUrl="@Model.ReturnUrl" class="switch-button">Register</a><!--Циклічність перемикання тексту на кнопці -->
</form>
